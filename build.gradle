plugins {
  id 'java'
  id 'org.springframework.boot' version '3.1.1'
  id 'io.spring.dependency-management' version '1.1.2'
  id 'checkstyle'
  id 'com.github.spotbugs' version '5.1.2'
}

group = 'com.james2ch9developer'
version = '1.0.0'

java {
  sourceCompatibility = '17'
  targetCompatibility = '17'
}

repositories {
  mavenCentral()
}

dependencies {
  // implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.slf4j:slf4j-api'
  implementation 'ch.qos.logback:logback-classic'
  implementation 'org.springframework.kafka:spring-kafka'
  implementation 'org.apache.kafka:kafka-clients'
  // implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
  // developmentOnly 'org.springframework.boot:spring-boot-devtools'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.kafka:spring-kafka-test'
  // testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
  useJUnitPlatform()
}

checkstyle {
  getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
  toolVersion = '10.12.0'
}

spotbugs {
    reportLevel = "low"
    effort = "max"
    showProgress = true
}

tasks.forEach { task ->
    if (task.getClass().getName() == "com.github.spotbugs.snom.SpotBugsTask_Decorated") {
      task.reports {
          xml.enabled = false
          xml.destination = file("${rootProject.buildDir}/reports/spotbugs/${name}.html")
          html.enabled = true
      }
    }
}
