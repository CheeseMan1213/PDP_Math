plugins {
  id 'java'
  id 'org.springframework.boot' version '3.1.4'
  id 'io.spring.dependency-management' version '1.1.3'
  id 'checkstyle'
  id 'com.github.spotbugs' version '5.1.4'
  id "io.freefair.lombok" version "8.4"
}

group = 'com.james2ch9developer'
version = '1.0.0'

java {
  sourceCompatibility = '17'
  targetCompatibility = '17'
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-web:3.1.4'
  implementation 'org.slf4j:slf4j-api:2.0.9'
  implementation 'ch.qos.logback:logback-classic:1.4.11'
  implementation 'org.springframework.kafka:spring-kafka:3.0.11'
  implementation 'org.projectlombok:lombok:1.18.30'
  /*
  Regarding the Kafka clients dependency. I have now encountered issues with versioning twice.
  * First, I had trouble specifying a specific version number, so I figured out which one it was pulling
  * down and then placed for that specific number.
  *
  * About a week later, the github dependabot informed me that I can go to version 3.5.1.
  * In both cases I was getting this error:
  * Caused by: org.apache.kafka.common.errors.TimeoutException
  * Then I read this page:
  * https://stackoverflow.com/questions/53783938/org-springframework-context-applicationcontextexception
  -failed-to-start-bean-o
  *
  * This page mentions that there is a relationship between the spring boot version and the Kafka clients version.
  * From this point forward, I can never use a newer version of Kafka clients, unless I am also
  * using a newer version of spring boot.
  * */
  implementation 'org.apache.kafka:kafka-clients:3.6.0'
  implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:3.1.4'
  // developmentOnly 'org.springframework.boot:spring-boot-devtools'
  // Spring framework dependency for ServiceConnection annotation.
  testImplementation 'org.springframework.boot:spring-boot-testcontainers'
  testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.4'
  testImplementation 'org.springframework.kafka:spring-kafka-test:3.1.0'
  testImplementation 'org.testcontainers:junit-jupiter:1.19.0'
  testImplementation 'org.testcontainers:mongodb:1.19.1'
  testImplementation 'org.testcontainers:kafka:1.19.1'
  testImplementation 'org.springframework.security:spring-security-test'
}

ext {
  set('snakeyaml.version','2.0')
}

tasks.named('test') {
  useJUnitPlatform()
  // This in needed to work around a bug in Testcontainers.
  environment("TESTCONTAINERS_RYUK_DISABLED", "true")
}

checkstyle {
  getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
  toolVersion = '10.12.0'
}

spotbugs {
    reportLevel = "low"
    effort = "max"
    showProgress = true
}

tasks.forEach { task ->
    if (task.getClass().getName() == "com.github.spotbugs.snom.SpotBugsTask_Decorated") {
      task.reports {
          xml.enabled = false
          xml.destination = file("${rootProject.buildDir}/reports/spotbugs/${name}.html")
          html.enabled = true
      }
    }
}
